%%%-------------------------------------------------------------------
%%% @author Alexander Morozov aka ~ArchimeD~
%%% @copyright 2014, Alexander Morozov
%%% @doc
%%% Tests for the autogenerated pfile_lexer module
%%% @end
%%%-------------------------------------------------------------------

-module(lexer_SUITE).
-author("Alexander Morozov aka ~ArchimeD~").

-compile(export_all).

-include_lib("eunit/include/eunit.hrl").



%%--------------------------------------------------------------------
%% @doc
%% A "fixture" to run tests
%% @end
%%--------------------------------------------------------------------

setup_test_()->
    Suite = { foreach, local, fun setup/0, fun cleanup/1, tests() },
    Suite.



%%--------------------------------------------------------------------
%% @doc
%% Initializes tests
%% @end
%%--------------------------------------------------------------------

setup()->
    ok.



%%--------------------------------------------------------------------
%% @doc
%% Cleans up the tests
%% @end
%%--------------------------------------------------------------------

cleanup(_) ->
    ok.



%%--------------------------------------------------------------------
%% @doc
%% Returns the test set
%% @end
%%--------------------------------------------------------------------

tests() ->
    [
     {"Simple config", ?_test(simple_word())},
     {"Two lines", ?_test(two_lines())},
     {"Key-Value #1", ?_test(key_value_1())}
    ].



%%--------------------------------------------------------------------
%% @doc
%% Tests the simple configuration
%% @end
%%--------------------------------------------------------------------

simple_word() ->
    ?assertEqual({ok,[{value,"test",1}],1}, pfile_lexer:string("test")).



%%--------------------------------------------------------------------
%% @doc
%% Tests two lines
%% @end
%%--------------------------------------------------------------------

two_lines() ->
    ?assertEqual({ok,[{value,"first",1}, {value,"second",2}],2}, pfile_lexer:string("first\nsecond")).



%%--------------------------------------------------------------------
%% @doc
%% Tests key=value
%% @end
%%--------------------------------------------------------------------

key_value_1() ->
    ?assertEqual({ok,[{id,"key",1}, {'=', 1}, {value,"value",1}],1},
		 pfile_lexer:string("key=value")).

